@using SistemaPedidos.Entities
@using SistemaPedidos.Services
@inject NavigationManager navigationManager
@inject EmpleadoService empleadoService

<h3>@Titulo</h3>

<EditForm Model="@oRegistroVentasCLS" OnValidSubmit="@guardar">
    <DataAnnotationsValidator />
    <div class="mt-3">
        <label>Número de Empleado</label>
        <InputNumber class="form-control" @bind-Value="oRegistroVentasCLS.Num_Empl" />
        <ValidationMessage For="(() => oRegistroVentasCLS.Num_Empl)" />
    </div>
    <div class="mt-3">
        <label>Nombre</label>
        <InputText class="form-control" @bind-Value="oRegistroVentasCLS.Nombre" />
        <ValidationMessage For="(() => oRegistroVentasCLS.Nombre)" />
    </div>
    <div class="mt-3">
        <label>Edad</label>
        <InputNumber class="form-control" @bind-Value="oRegistroVentasCLS.Edad" />
        <ValidationMessage For="(() => oRegistroVentasCLS.Edad)" />
    </div>
    <div class="mt-3">
        <label>Cargo</label>
        <InputText class="form-control" @bind-Value="oRegistroVentasCLS.Cargo" />
        <ValidationMessage For="(() => oRegistroVentasCLS.Cargo)" />
    </div>
    <div class="mt-3">
        <label>Fecha de Contrato</label>
        <InputDate class="form-control" @bind-Value="oRegistroVentasCLS.FechaDeContrato" />
        <ValidationMessage For="(() => oRegistroVentasCLS.FechaDeContrato)" />
    </div>
    <div class="mt-3">
        <label>Cuota</label>
        <InputNumber class="form-control" @bind-Value="oRegistroVentasCLS.Cuota" />
        <ValidationMessage For="(() => oRegistroVentasCLS.Cuota)" />
    </div>
    <div class="mt-3">
        <label>Ventas</label>
        <InputNumber class="form-control" @bind-Value="oRegistroVentasCLS.Ventas" />
        <ValidationMessage For="(() => oRegistroVentasCLS.Ventas)" />
    </div>
    <div class="mt-3">
        <button type="submit" class="btn btn-success">Guardar</button>
        <button class="btn btn-danger" @onclick="regresar">Regresar</button>
    </div>
</EditForm>

@code {
    [Parameter]
    public int Num_Empl { get; set; }

    public string Titulo { get; set; } = "";
    public RegistroVentasCLS oRegistroVentasCLS { get; set; } = new RegistroVentasCLS();

    protected override void OnInitialized()
    {
        if (Num_Empl != 0)
        {
            oRegistroVentasCLS = empleadoService.obtenerEmpleado(Num_Empl);
            Titulo = "Editar Empleado";
        }
        else
        {
            Titulo = "Agregar Empleado";
        }
    }

    private void guardar()
    {
        try
        {
            if (oRegistroVentasCLS.Num_Empl == 0)
            {
                empleadoService.agregarEmpleado(oRegistroVentasCLS);
            }
            else
            {
                empleadoService.editarEmpleado(oRegistroVentasCLS);
            }
            navigationManager.NavigateTo("/empleado");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error al guardar el empleado: {ex.Message}");
        }
    }

    private void regresar()
    {
        navigationManager.NavigateTo("/empleado");
    }
}